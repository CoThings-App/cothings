apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $.Values.name }}-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $.Values.name }}-db
  serviceName: {{ $.Values.name }}-db
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ $.Values.name }}-db
    spec:
{{- with $.Values.region }}
      nodeSelector:
        topology.kubernetes.io/region: {{ . }}
{{- end }}
      automountServiceAccountToken: false
{{- if or ($.Values.database.initialSeed) ($.Values.database.persistence.enabled) }}
      volumes:
{{- end }}
{{- with $.Values.database.initialSeed }}
        - name: init-db-data
{{ . | toYaml | indent 10 }}
{{- end }}
{{- if $.Values.database.persistence.enabled }}
        - name: db-data
          persistentVolumeClaim:
            claimName: {{ $.Values.name }}-db-data
{{- end }}
      containers:
      - name: postgres
        image: postgres:12.1
{{- if or ($.Values.database.initialSeed) ($.Values.database.persistence.enabled) }}
        volumeMounts:
{{- end }}
{{- with $.Values.database.initialSeed }}
        - name: init-db-data
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true
{{- end }}
{{- if $.Values.database.persistence.enabled }}
        - name: db-data
          mountPath: /var/lib/postgresql/data
{{- end }}
        resources:
          requests:
            cpu: 250m # =0.25core
            memory: 128Mi
          limits:
            cpu: 750m # =0.75core
            memory: 256Mi
        env:
        - name: POSTGRES_USER
          value: coliving
        - name: POSTGRES_PASSWORD
          value: {{ $.Values.database.password }}
        - name: POSTGRES_DB
          value: {{ $.Values.database.name | default "cothings_prod" }}
{{- if $.Values.database.persistence.enabled }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
{{- end }}
        ports:
        - containerPort: 5432

---

apiVersion: v1
kind: Service
metadata:
  name: {{ $.Values.name }}-db
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: {{ $.Values.name }}-db
  type: ClusterIP

{{- if $.Values.database.persistence.enabled }}
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $.Values.name }}-db-data
spec:
{{- with $.Values.database.persistence.storageClassName }}
  storageClassName: {{ . }}
{{- end }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ $.Values.database.persistence.size }}

{{- end }}

